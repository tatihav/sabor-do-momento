// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc.Models;

#nullable disable

namespace mvc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250507012027_SeedCategoriasETags")]
    partial class SeedCategoriasETags
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mvc.Models.Domain.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Café da Manhã"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Almoço"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Jantar"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Sobremesa"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Lanche"
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<string>("TextoComentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("mvc.Models.Domain.Curtida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Curtidas");
                });

            modelBuilder.Entity("mvc.Models.Domain.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovada")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Ingredientes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModoPreparo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TempoPreparo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaHasTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("TagId");

                    b.ToTable("ReceitaHasTags");
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaSalva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ReceitasSalvas");
                });

            modelBuilder.Entity("mvc.Models.Domain.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Vegana"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fitness"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "LowCarb"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Natural"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Sem Glúten"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Vegetariana"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Tradicional"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Sem Lactose"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Nutritivo"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Fácil"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Rápido"
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("mvc.Models.Domain.Comentario", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("Comentarios")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.Curtida", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("Curtidas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("Curtidas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.Receita", b =>
                {
                    b.HasOne("mvc.Models.Domain.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("Receitas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaHasTag", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("ReceitaHasTags")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Tag", "Tag")
                        .WithMany("ReceitaHasTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaSalva", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("ReceitasSalvas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("ReceitasSalvas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.Receita", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Curtidas");

                    b.Navigation("ReceitaHasTags");

                    b.Navigation("ReceitasSalvas");
                });

            modelBuilder.Entity("mvc.Models.Domain.Tag", b =>
                {
                    b.Navigation("ReceitaHasTags");
                });

            modelBuilder.Entity("mvc.Models.Domain.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Curtidas");

                    b.Navigation("Receitas");

                    b.Navigation("ReceitasSalvas");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mvc.Models;

#nullable disable

namespace mvc.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250513123402_AdicionarCampoPerfilEmUsuario")]
    partial class AdicionarCampoPerfilEmUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mvc.Models.Domain.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Café da Manhã"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Almoço"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Jantar"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Sobremesa"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Lanche"
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<string>("TextoComentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Comentarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReceitaId = 1,
                            TextoComentario = "Muito bom",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            ReceitaId = 1,
                            TextoComentario = "Receita top, eu adorei",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            ReceitaId = 1,
                            TextoComentario = "pessoal aqui em casa amou",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            ReceitaId = 2,
                            TextoComentario = "essa é a minha receita favorita",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            ReceitaId = 2,
                            TextoComentario = "top",
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            ReceitaId = 2,
                            TextoComentario = "recomendo, podem fazer",
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            ReceitaId = 2,
                            TextoComentario = "excelente",
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            ReceitaId = 2,
                            TextoComentario = "recomendo",
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            ReceitaId = 1,
                            TextoComentario = "receita muito boa",
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            ReceitaId = 3,
                            TextoComentario = "a minha favorita",
                            UsuarioId = 10
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Curtida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Curtidas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReceitaId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            ReceitaId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            ReceitaId = 1,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            ReceitaId = 1,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            ReceitaId = 1,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            ReceitaId = 1,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            ReceitaId = 1,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            ReceitaId = 1,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            ReceitaId = 1,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            ReceitaId = 1,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 11,
                            ReceitaId = 6,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 12,
                            ReceitaId = 6,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 13,
                            ReceitaId = 6,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 14,
                            ReceitaId = 6,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 15,
                            ReceitaId = 6,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 16,
                            ReceitaId = 6,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 17,
                            ReceitaId = 7,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 18,
                            ReceitaId = 7,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 19,
                            ReceitaId = 7,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 20,
                            ReceitaId = 7,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 21,
                            ReceitaId = 7,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 22,
                            ReceitaId = 7,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 23,
                            ReceitaId = 7,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 24,
                            ReceitaId = 7,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 25,
                            ReceitaId = 7,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 26,
                            ReceitaId = 7,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 27,
                            ReceitaId = 7,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 28,
                            ReceitaId = 8,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 29,
                            ReceitaId = 8,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 30,
                            ReceitaId = 8,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 31,
                            ReceitaId = 8,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 32,
                            ReceitaId = 8,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 33,
                            ReceitaId = 8,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 34,
                            ReceitaId = 8,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 35,
                            ReceitaId = 8,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 36,
                            ReceitaId = 8,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 37,
                            ReceitaId = 8,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 38,
                            ReceitaId = 9,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 39,
                            ReceitaId = 9,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 40,
                            ReceitaId = 9,
                            UsuarioId = 3
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovada")
                        .HasColumnType("bit");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Ingredientes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModoPreparo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TempoPreparo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Receitas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aprovada = true,
                            CategoriaId = 5,
                            Ingredientes = "3 cenouras médias, 4 ovos, 1 xícara de óleo, 2 xícaras de açúcar, 2 xícaras de farinha de trigo, 1 colher de sopa de fermento em pó",
                            ModoPreparo = "Bata no liquidificador as cenouras, ovos e óleo. Misture o açúcar, a farinha e o fermento em uma tigela e adicione à mistura do liquidificador. Asse em forno pré-aquecido a 180°C por 40 minutos.",
                            TempoPreparo = 30,
                            Titulo = "Bolo de Cenoura",
                            UrlFoto = "https://abiad.org.br/2021/wp-content/uploads/2020/09/bolocenoura_xilitol_igorrocha.jpg",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Aprovada = true,
                            CategoriaId = 2,
                            Ingredientes = "500g de carne moída, 1 pacote de massa para lasanha, 500g de queijo mussarela, 500g de presunto, 1 lata de molho de tomate, 2 colheres de sopa de óleo, Sal e pimenta a gosto",
                            ModoPreparo = "Refogue a carne com óleo, sal e pimenta. Adicione o molho de tomate. Em uma travessa, alterne camadas de massa, carne, presunto e queijo. Finalize com queijo. Asse por 30 minutos a 180°C.",
                            TempoPreparo = 20,
                            Titulo = "Lasanha de Carne",
                            UrlFoto = "https://p2.trrsf.com/image/fget/cf/1200/1600/middle/images.terra.com/2022/01/20/1189747356-lasanha-escondidinho-carne-moida-768x512.jpg",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Aprovada = true,
                            CategoriaId = 4,
                            Ingredientes = "1 pacote de biscoito maisena, 100g de manteiga, 1 lata de leite condensado, Suco de 2 limões, Raspas de limão, 3 claras, 3 colheres de açúcar",
                            ModoPreparo = "Misture o biscoito triturado com a manteiga derretida e forre uma forma. Bata o leite condensado com o suco de limão e despeje sobre a massa. Faça o merengue com as claras e açúcar e cubra a torta. Asse por 10 minutos até dourar.",
                            TempoPreparo = 40,
                            Titulo = "Torta de Limão",
                            UrlFoto = "https://www.mococa.com.br/wp-content/uploads/2022/07/Torta-de-limao_6-scaled.jpg",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            Aprovada = true,
                            CategoriaId = 3,
                            Ingredientes = "500g de feijão preto, 300g de carne seca, 200g de linguiça calabresa, 200g de paio, 1 cebola picada, 2 dentes de alho, Sal e pimenta a gosto",
                            ModoPreparo = "Deixe o feijão de molho. Cozinhe as carnes separadamente e depois misture ao feijão. Adicione a cebola e o alho refogados. Cozinhe até o feijão estar macio.",
                            TempoPreparo = 30,
                            Titulo = "Feijoada",
                            UrlFoto = "https://static.itdg.com.br/images/1200-630/7a1c975ecbe125ad44416e5611a15569/352595-original.jpg",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            Aprovada = true,
                            CategoriaId = 2,
                            Ingredientes = "1 pé de alface romana, 100g de queijo parmesão, 100g de croutons, 2 filés de peito de frango, Molho Caesar (à base de maionese, parmesão, limão e alho)",
                            ModoPreparo = "Grelhe o frango e fatie. Monte a salada com alface, frango, parmesão e croutons. Regue com o molho Caesar.",
                            TempoPreparo = 10,
                            Titulo = "Salada Caesar",
                            UrlFoto = "https://d1uz88p17r663j.cloudfront.net/original/82ddb6cea5bc7d60f39e3efadb89dab6_salada-cesar-receitas-nestle.jpg",
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            Aprovada = true,
                            CategoriaId = 3,
                            Ingredientes = "2 peitos de frango, 2 ovos, Farinha de trigo para empanar, Farinha de rosca para empanar, Molho de tomate, 200g de queijo mussarela, Sal e pimenta a gosto",
                            ModoPreparo = "Tempere os peitos de frango com sal e pimenta, passe na farinha de trigo, nos ovos batidos e na farinha de rosca. Frite até dourar. Coloque o molho de tomate e queijo por cima e leve ao forno até derreter o queijo.",
                            TempoPreparo = 30,
                            Titulo = "Frango à Parmegiana",
                            UrlFoto = "https://p2.trrsf.com/image/fget/cf/1200/1600/middle/images.terra.com/2024/01/28/1237455610-file-de-frango-a-parmegiana-sem-fritar-ca48iw6c.jpg",
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            Aprovada = true,
                            CategoriaId = 2,
                            Ingredientes = "1 kg de filé de peixe (pescada, robalo ou outro), 1 cebola grande, 1 pimentão vermelho, 1 pimentão verde, 2 tomates, 200ml de leite de coco, Azeite de dendê, Coentro a gosto, Sal e pimenta a gosto",
                            ModoPreparo = "Tempere os filés de peixe com sal e pimenta. Em uma panela, refogue a cebola, os pimentões e os tomates. Adicione o leite de coco e o azeite de dendê. Cozinhe o peixe por cerca de 20 minutos. Finalize com coentro.",
                            TempoPreparo = 20,
                            Titulo = "Moqueca de Peixe",
                            UrlFoto = "https://www.receiteria.com.br/wp-content/uploads/moqueca-de-pintado-00.jpg",
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            Aprovada = true,
                            CategoriaId = 5,
                            Ingredientes = "1 peito de frango desfiado, 1 cebola picada, 2 dentes de alho, 1 colher de sopa de azeite, 2 colheres de sopa de farinha de trigo, 1 copo de caldo de frango, Farinha de rosca para empanar, Óleo para fritar",
                            ModoPreparo = "Refogue o frango com cebola, alho e azeite. Adicione a farinha e o caldo de frango até formar uma massa. Modele as coxinhas, empane na farinha de rosca e frite em óleo quente até dourar.",
                            TempoPreparo = 45,
                            Titulo = "Coxinha de Frango",
                            UrlFoto = "https://static.itdg.com.br/images/1200-675/1dc3e596953e0d2e6bfff1b90fbcbb29/118911-original.jpg",
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            Aprovada = true,
                            CategoriaId = 4,
                            Ingredientes = "1 lata de leite condensado, 2 colheres de sopa de chocolate em pó, 1 colher de sopa de manteiga, Chocolate granulado para decorar",
                            ModoPreparo = "Em uma panela, misture o leite condensado, o chocolate em pó e a manteiga. Cozinhe em fogo baixo até desgrudar do fundo da panela. Deixe esfriar, faça bolinhas e passe no granulado.",
                            TempoPreparo = 10,
                            Titulo = "Brigadeiro",
                            UrlFoto = "https://www.conqualita.com.br/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/b/r/brigadeiro_2.jpg",
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            Aprovada = true,
                            CategoriaId = 1,
                            Ingredientes = "1 xícara de farinha de trigo, 1 colher de sopa de açúcar, 1 colher de chá de fermento em pó, 1 xícara de leite, 1 ovo, 1 colher de sopa de manteiga derretida",
                            ModoPreparo = "Misture todos os ingredientes em uma tigela até obter uma massa homogênea. Aqueça uma frigideira e coloque uma porção da massa. Cozinhe até formar bolhas e vire. Sirva com mel ou frutas.",
                            TempoPreparo = 15,
                            Titulo = "Panqueca Americana",
                            UrlFoto = "https://conteudo.imguol.com.br/c/entretenimento/8f/2020/06/05/panqueca-americana-com-frutas-vermelhas-1591366485086_v2_1280x1920.jpg",
                            UsuarioId = 10
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaHasTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("TagId");

                    b.ToTable("ReceitaHasTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReceitaId = 1,
                            TagId = 7
                        },
                        new
                        {
                            Id = 2,
                            ReceitaId = 1,
                            TagId = 10
                        },
                        new
                        {
                            Id = 3,
                            ReceitaId = 2,
                            TagId = 7
                        },
                        new
                        {
                            Id = 4,
                            ReceitaId = 2,
                            TagId = 11
                        },
                        new
                        {
                            Id = 5,
                            ReceitaId = 3,
                            TagId = 4
                        },
                        new
                        {
                            Id = 6,
                            ReceitaId = 4,
                            TagId = 7
                        },
                        new
                        {
                            Id = 7,
                            ReceitaId = 5,
                            TagId = 9
                        },
                        new
                        {
                            Id = 8,
                            ReceitaId = 5,
                            TagId = 2
                        },
                        new
                        {
                            Id = 9,
                            ReceitaId = 6,
                            TagId = 7
                        },
                        new
                        {
                            Id = 10,
                            ReceitaId = 10,
                            TagId = 10
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaSalva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ReceitaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ReceitasSalvas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ReceitaId = 1,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            ReceitaId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            ReceitaId = 3,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            ReceitaId = 4,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            ReceitaId = 5,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            ReceitaId = 6,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            ReceitaId = 7,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 8,
                            ReceitaId = 8,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 9,
                            ReceitaId = 9,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 10,
                            ReceitaId = 10,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Vegana"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Fitness"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "LowCarb"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Natural"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Sem Glúten"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Vegetariana"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Tradicional"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Sem Lactose"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Nutritivo"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Fácil"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Rápido"
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "usuario1@gmail.com",
                            Nome = "Maria Souza",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/women/2.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Email = "usuario2@gmail.com",
                            Nome = "Bruna Mendes",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/women/6.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Email = "usuario3@gmail.com",
                            Nome = "Roberta Carvalho",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/women/10.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Email = "usuario4@gmail.com",
                            Nome = "Marcelo Gomes",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/men/13.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Email = "usuario5@gmail.com",
                            Nome = "Patrícia Almeida",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/women/15.jpg"
                        },
                        new
                        {
                            Id = 6,
                            Email = "usuario6@gmail.com",
                            Nome = "Débora Vieira",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/women/17.jpg"
                        },
                        new
                        {
                            Id = 7,
                            Email = "usuario7@gmail.com",
                            Nome = "Gustavo Lopes",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/men/19.jpg"
                        },
                        new
                        {
                            Id = 8,
                            Email = "usuario8@gmail.com",
                            Nome = "João Lima",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/men/22.jpg"
                        },
                        new
                        {
                            Id = 9,
                            Email = "usuario9@gmail.com",
                            Nome = "Carlos Moreira",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/men/26.jpg"
                        },
                        new
                        {
                            Id = 10,
                            Email = "usuario10@gmail.com",
                            Nome = "André Gomes",
                            Perfil = 0,
                            Senha = "12345678",
                            UrlFoto = "https://randomuser.me/api/portraits/men/33.jpg"
                        });
                });

            modelBuilder.Entity("mvc.Models.Domain.Comentario", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("Comentarios")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.Curtida", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("Curtidas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("Curtidas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.Receita", b =>
                {
                    b.HasOne("mvc.Models.Domain.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("Receitas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaHasTag", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("ReceitaHasTags")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Tag", "Tag")
                        .WithMany("ReceitaHasTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("mvc.Models.Domain.ReceitaSalva", b =>
                {
                    b.HasOne("mvc.Models.Domain.Receita", "Receita")
                        .WithMany("ReceitasSalvas")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("mvc.Models.Domain.Usuario", "Usuario")
                        .WithMany("ReceitasSalvas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("mvc.Models.Domain.Receita", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Curtidas");

                    b.Navigation("ReceitaHasTags");

                    b.Navigation("ReceitasSalvas");
                });

            modelBuilder.Entity("mvc.Models.Domain.Tag", b =>
                {
                    b.Navigation("ReceitaHasTags");
                });

            modelBuilder.Entity("mvc.Models.Domain.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Curtidas");

                    b.Navigation("Receitas");

                    b.Navigation("ReceitasSalvas");
                });
#pragma warning restore 612, 618
        }
    }
}
